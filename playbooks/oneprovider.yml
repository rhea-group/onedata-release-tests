- hosts: localhost
  connection: local
  tasks:
    - name: Comment otc dns
      become: yes
      become_user: root
      replace:
        path: /etc/resolv.conf
        regexp: '^(nameserver 100)'
        replace: '#\1'
        backup: yes
    - name: Install bind-utils
      become: yes
      yum:
        name: bind-utils
        state: installed
    - name: Check for subdomain
      command: "host {{ansible_hostname}}.{{domain}}"
      register: subdomain
      ignore_errors: yes
    - debug: msg="The subdomain is used. Remove it from your onezone or use another name for project"
      failed_when: subdomain.rc == 0
      when: subdomain.rc == 0
    - name: Wait for Ceph
      command: ceph -s -c ~/ceph.conf --keyring ~/ceph.client.admin.keyring
      register: res
      until: res.rc == 0
      retries: 20
      delay: 6
      changed_when: false
      when: storage_type == "ceph"
    - name: Get client.admin keyring
      shell: tail -1 ~/ceph.client.admin.keyring | awk '{print $3}'
      register: keyring
    - debug: msg={{keyring}}
    - name: Get ceph monitor ip
      shell: grep mon_host ~/ceph.conf | awk '{print $3}'
      register: mon_host
    - debug: msg={{mon_host}}
    - name: Download onedatify.sh
      get_url:
        dest: /tmp/od.sh
        url: https://get.onedata.org/onedatify.sh
        mode: 0755
    - name: Run onedatify with expect
      expect:
        timeout: 600
        command: /tmp/od.sh "https://{{domain}}" "{{support_token}}" "{{import}}"
        echo: yes
        responses:
          'Do you want to continue \(y/n\)\?\:': 'y'
          'Please enter the fully qualified domain name.*': "{{ansible_hostname}}.{{domain}}"
          'Please enter the preety name of your oneprovider.*': "{{ansible_hostname}}"
          'Enter a new administration password for the Oneprovider or the password will be autogenerated:': "{{oppass}}"
          'Absolute path where to keep oneprovider configuration and metadata.*': ""
          'Please enter the latitude of your provider \(.*\..*\)\:': ""
          'Please enter the latitude of your provider \([^.]*\)\:': "51.1234"
          'Please enter the longitude of your provider \(.*\..*\)\:': ""
          'Please enter the longitude of your provider \([^.]*\)\:': "9.1234"
          'Do you want .*use subdomain delegation to acquire a FQDN for your Oneprovider.*': "y"
          'Please enter the subdomain for your oneprovider.*': "{{ansible_hostname}}"
          'Do you want Onezone to create Let''s Encrypt certificate for Oneprovider.*': "y"
          'Please enter a path to a private key for domain.*': ""
          'Please enter a path to a public certificate for domain.*': ""
          'Please enter a path to a public certificate signing authority for domain.*': ""
          'What storage type would you like to use\?.*': "{{storage_type}}"
          'Please provide Ceph cluster name.*': "ceph"
          'Please provide.* Ceph username.*': "client.admin"
          'Please provide.* Ceph key.*': "{{keyring.stdout}}"
          'Please provide.* hostname or IP of the Ceph monitor.*': "{{mon_host.stdout}}"
          'Please provide.* name of the Ceph pool to use.*': "onedata"
          'Does your Ceph server use https connection with a valid certificate\?.*': "n"
          'Please provide the url to the LUMA server, or leave it blank:': ""
          'An absolute path to a directory you want to expose trough Onedata from POSIX storage.*': "/posix"
          'Expose storage as read only\?.*': "n"
          'The size of space support in bytes.*': "{{support_size}}"
          'Do you want to regularly scan storage for any changes in files.*': "{{sync}}"
      register: cmd_output
    - debug: msg="{{cmd_output.stdout}}"
    - name: Copy onedatify output
      copy:
        content: "{{cmd_output.stdout}}"
        dest: "onedatify.stdout"
    - name: Copy op-worker-overlay.config
      become: yes
      copy:
        src: op-worker-overlay.config
        dest: /opt/onedata/onedatify/op-worker-overlay.config
    - name: Restart onedatify
      command: onedatify restart
      
          
